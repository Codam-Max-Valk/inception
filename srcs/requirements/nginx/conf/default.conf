server {
    # Listen exclusively on HTTPS with IPv4 and IPv6
    listen 443 ssl;
    listen [::]:443 ssl;

    # Set the server name to your domain
    # Note: NGINX does not expand environment variables by default.
    # You can either substitute this value at container startup using `envsubst`
    # or hardcode it. Here we'll use the subject’s requirement domain.
    server_name mvalk.42.fr;

    # SSL settings (ensure these files exist in your container)
    ssl_certificate     /etc/ssl/certs/nginx.crt;
    ssl_certificate_key /etc/ssl/private/nginx.key;

    # Enforce TLS versions per subject requirements
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Optionally, add a security header (HSTS)
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Since NGINX is only acting as a reverse proxy, we don’t set a document root.
    # Instead, we forward requests to WordPress.

    # Main location block: try files or route to index.php with query string parameters
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # PHP location: forward PHP scripts to the WordPress container (PHP-FPM)
    location ~ \.php$ {
        # Include the standard FastCGI parameters
        include fastcgi_params;
        # The FastCGI index file
        fastcgi_index index.php;
        # Specify the full path of the PHP script – usually using the document root variable
        fastcgi_param SCRIPT_FILENAME /var/www/html$fastcgi_script_name;
        # Pass the request to the WordPress container by its service name and port 
        fastcgi_pass wordpress:9000;

        # Optionally pass client information
        fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
    }

    # Deny access to hidden files (like .htaccess)
    location ~ /\. {
        deny all;
    }

    # Logging (ensure these directories/files are writable by the nginx user)
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log warn;
}
